name: Performance

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  bundle-analysis:
    runs-on: ubuntu-latest
    name: Bundle Size Analysis
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Analyze bundle size
        run: |
          echo "## Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
          echo "| File | Size |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|" >> $GITHUB_STEP_SUMMARY
          find dist -name "*.js" -o -name "*.css" | while read file; do
            size=$(stat -c%s "$file" 2>/dev/null || stat -f%z "$file" 2>/dev/null || echo "0")
            size_kb=$((size / 1024))
            echo "| $(basename "$file") | ${size_kb}KB |" >> $GITHUB_STEP_SUMMARY
          done

      - name: Check bundle size limits
        run: |
          # Check if any JS file is larger than 500KB
          large_files=$(find dist -name "*.js" -size +500k)
          if [ -n "$large_files" ]; then
            echo "⚠️ Warning: Large bundle files detected:"
            echo "$large_files"
            # Uncomment to fail the build on large bundles:
            # exit 1
          else
            echo "✅ All bundle files are within size limits"
          fi

  lighthouse-ci:
    runs-on: ubuntu-latest
    name: Lighthouse CI
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Serve and test with Lighthouse
        run: |
          npm install -g @lhci/cli
          npx serve dist -l 3000 &
          sleep 5
          lhci autorun --collect.startServerCommand="echo 'Server already running'" --collect.url=http://localhost:3000

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci/
